<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1balance__claim__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::balance_claim_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="balance_8hpp" local="no">balance.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1balance__claim__operation_1_1fee__parameters__type" prot="public">graphene::chain::balance_claim_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1balance__claim__operation_1acef20688a7c101a56276bf1cd0532d00" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::balance_claim_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/balance.hpp" line="40" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/balance.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1balance__claim__operation_1a5fbfb45b23f459f29056c7c3f9bf0664" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::balance_claim_operation::deposit_to_account</definition>
        <argsstring></argsstring>
        <name>deposit_to_account</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/balance.hpp" line="41" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/balance.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1balance__claim__operation_1acd1f460e785cf0a15f8aa7349878e70e" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1acd20e3f4b4f9cb5d8112cf5d97b3e259" kindref="member">balance_id_type</ref></type>
        <definition>balance_id_type graphene::chain::balance_claim_operation::balance_to_claim</definition>
        <argsstring></argsstring>
        <name>balance_to_claim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/balance.hpp" line="42" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/balance.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1balance__claim__operation_1ab1d2d82cbc59443f0a9f68b5caaca9e0" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1public__key__type" kindref="compound">public_key_type</ref></type>
        <definition>public_key_type graphene::chain::balance_claim_operation::balance_owner_key</definition>
        <argsstring></argsstring>
        <name>balance_owner_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/balance.hpp" line="43" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/balance.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1balance__claim__operation_1ae2c5ee9990ed7e5043ddb8885341b0fb" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::balance_claim_operation::total_claimed</definition>
        <argsstring></argsstring>
        <name>total_claimed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/balance.hpp" line="44" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/balance.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1balance__claim__operation_1a4a7c038ae27be3c49d6baa4f1daa5c7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::balance_claim_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/balance.hpp" line="46" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/balance.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1balance__claim__operation_1acf8b51ccbe659a51b3fe1a5adc34c372" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::balance_claim_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1balance__claim__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/balance.hpp" line="47" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/balance.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1balance__claim__operation_1ab577f9fd5eca1a92c810c461df12e71c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::balance_claim_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/balance.hpp" line="48" column="1" bodyfile="libraries/chain/protocol/operations.cpp" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1balance__claim__operation_1a1a095e7ed46dce90d221b9bfdad562d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::balance_claim_operation::get_required_authorities</definition>
        <argsstring>(vector&lt; authority &gt; &amp;a) const</argsstring>
        <name>get_required_authorities</name>
        <param>
          <type>vector&lt; <ref refid="structgraphene_1_1chain_1_1authority" kindref="compound">authority</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/balance.hpp" line="49" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/balance.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Claim a balance in a balanc_object. </para>    </briefdescription>
    <detaileddescription>
<para>This operation is used to claim the balance in a given <ref refid="classgraphene_1_1chain_1_1balance__object" kindref="compound">balance_object</ref>. If the balance object contains a vesting balance, <ref refid="structgraphene_1_1chain_1_1balance__claim__operation_1ae2c5ee9990ed7e5043ddb8885341b0fb" kindref="member">total_claimed</ref> must not exceed <ref refid="classgraphene_1_1chain_1_1balance__object_1abc9aa8646d5952a3cd75b07a3ebdcf57" kindref="member">balance_object::available</ref> at the time of evaluation. If the object contains a non-vesting balance, <ref refid="structgraphene_1_1chain_1_1balance__claim__operation_1ae2c5ee9990ed7e5043ddb8885341b0fb" kindref="member">total_claimed</ref> must be the full balance of the object. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1064">
        <label>graphene::chain::balance_claim_operation</label>
        <link refid="structgraphene_1_1chain_1_1balance__claim__operation"/>
        <childnode refid="1065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1065">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1066">
        <label>graphene::chain::balance_claim_operation</label>
        <link refid="structgraphene_1_1chain_1_1balance__claim__operation"/>
        <childnode refid="1067" relation="public-inheritance">
        </childnode>
        <childnode refid="1068" relation="usage">
          <edgelabel>total_claimed</edgelabel>
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="1070" relation="usage">
          <edgelabel>balance_owner_key</edgelabel>
        </childnode>
      </node>
      <node id="1070">
        <label>graphene::chain::public_key_type</label>
        <link refid="structgraphene_1_1chain_1_1public__key__type"/>
      </node>
      <node id="1067">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="1068">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="1069" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="1069">
        <label>safe&lt; int64_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/balance.hpp" line="37" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/balance.hpp" bodystart="36" bodyend="53"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1balance__claim__operation_1ab1d2d82cbc59443f0a9f68b5caaca9e0" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>balance_owner_key</name></member>
      <member refid="structgraphene_1_1chain_1_1balance__claim__operation_1acd1f460e785cf0a15f8aa7349878e70e" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>balance_to_claim</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1balance__claim__operation_1acf8b51ccbe659a51b3fe1a5adc34c372" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual" ambiguityscope="graphene::chain::base_operation::"><scope>graphene::chain::balance_claim_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1balance__claim__operation_1a5fbfb45b23f459f29056c7c3f9bf0664" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>deposit_to_account</name></member>
      <member refid="structgraphene_1_1chain_1_1balance__claim__operation_1acef20688a7c101a56276bf1cd0532d00" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1balance__claim__operation_1a4a7c038ae27be3c49d6baa4f1daa5c7d" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1balance__claim__operation_1a1a095e7ed46dce90d221b9bfdad562d6" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1balance__claim__operation_1ae2c5ee9990ed7e5043ddb8885341b0fb" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>total_claimed</name></member>
      <member refid="structgraphene_1_1chain_1_1balance__claim__operation_1ab577f9fd5eca1a92c810c461df12e71c" prot="public" virt="non-virtual"><scope>graphene::chain::balance_claim_operation</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
