<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1proposal__create__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::proposal_create_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="proposal_8hpp" local="no">proposal.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1proposal__create__operation_1_1fee__parameters__type" prot="public">graphene::chain::proposal_create_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__create__operation_1a44dcdd9bdf2198de039700f72c3be51e" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::proposal_create_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/proposal.hpp" line="76" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/proposal.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__create__operation_1add9469f87efe146c498a2ec15c0794a3" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::proposal_create_operation::fee_paying_account</definition>
        <argsstring></argsstring>
        <name>fee_paying_account</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/proposal.hpp" line="77" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/proposal.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__create__operation_1afd72e778d7983044526ee06ddb1a72be" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="structgraphene_1_1chain_1_1op__wrapper" kindref="compound">op_wrapper</ref> &gt;</type>
        <definition>vector&lt;op_wrapper&gt; graphene::chain::proposal_create_operation::proposed_ops</definition>
        <argsstring></argsstring>
        <name>proposed_ops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/proposal.hpp" line="78" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/proposal.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__create__operation_1a139682525efeb84af7f1816c42b26ef3" prot="public" static="no" mutable="no">
        <type>time_point_sec</type>
        <definition>time_point_sec graphene::chain::proposal_create_operation::expiration_time</definition>
        <argsstring></argsstring>
        <name>expiration_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/proposal.hpp" line="79" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/proposal.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__create__operation_1af2fc94e217169c77500111593a89403f" prot="public" static="no" mutable="no">
        <type>optional&lt; uint32_t &gt;</type>
        <definition>optional&lt;uint32_t&gt; graphene::chain::proposal_create_operation::review_period_seconds</definition>
        <argsstring></argsstring>
        <name>review_period_seconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/proposal.hpp" line="80" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/proposal.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__create__operation_1a6e90f6317b32815f5bd500911197162d" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gae0096750377f6e9d61dba5765284de99" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::chain::proposal_create_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/proposal.hpp" line="81" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/proposal.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__create__operation_1ae244ca9ced52e6b775e9ac72921a78b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgraphene_1_1chain_1_1proposal__create__operation" kindref="compound">proposal_create_operation</ref></type>
        <definition>proposal_create_operation graphene::chain::proposal_create_operation::committee_proposal</definition>
        <argsstring>(const chain_parameters &amp;param, fc::time_point_sec head_block_time)</argsstring>
        <name>committee_proposal</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1chain__parameters" kindref="compound">chain_parameters</ref> &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type>fc::time_point_sec</type>
          <declname>head_block_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="structgraphene_1_1chain_1_1proposal__create__operation" kindref="compound">proposal_create_operation</ref> suitable for committee proposals, with expiration time and review period set appropriately. No proposed_ops are added. When used to create a proposal to change chain parameters, this method expects to receive the currently effective parameters, not the proposed parameters. (The proposed parameters will go in proposed_ops, and proposed_ops is untouched by this function.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/proposal.hpp" line="93" column="1" bodyfile="libraries/chain/protocol/proposal.cpp" bodystart="30" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__create__operation_1a87cbd7d7c3f35d0ae643029d010b1398" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::proposal_create_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/proposal.hpp" line="95" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/proposal.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__create__operation_1a461648231991c2b74e8efdeab4d7134c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_create_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/proposal.hpp" line="96" column="1" bodyfile="libraries/chain/protocol/proposal.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__create__operation_1ab6c89f4b39277c2c362050fd1e76c9b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::proposal_create_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1proposal__create__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/proposal.hpp" line="97" column="1" bodyfile="libraries/chain/protocol/proposal.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="structgraphene_1_1chain_1_1proposal__create__operation" kindref="compound">proposal_create_operation</ref> creates a transaction proposal, for use in multi-sig scenarios</para><para>Creates a transaction proposal. The operations which compose the transaction are listed in order in proposed_ops, and expiration_time specifies the time by which the proposal must be accepted or it will fail permanently. The expiration_time cannot be farther in the future than the maximum expiration time set in the global properties object. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2446">
        <label>graphene::chain::proposal_create_operation</label>
        <link refid="structgraphene_1_1chain_1_1proposal__create__operation"/>
        <childnode refid="2447" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2447">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2452">
        <label>time_point_sec</label>
      </node>
      <node id="2453">
        <label>vector&lt; graphene::chain::op_wrapper &gt;</label>
      </node>
      <node id="2448">
        <label>graphene::chain::proposal_create_operation</label>
        <link refid="structgraphene_1_1chain_1_1proposal__create__operation"/>
        <childnode refid="2449" relation="public-inheritance">
        </childnode>
        <childnode refid="2450" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="2451" relation="usage">
          <edgelabel>review_period_seconds</edgelabel>
        </childnode>
        <childnode refid="2452" relation="usage">
          <edgelabel>expiration_time</edgelabel>
        </childnode>
        <childnode refid="2453" relation="usage">
          <edgelabel>proposed_ops</edgelabel>
        </childnode>
        <childnode refid="2454" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
      </node>
      <node id="2450">
        <label>flat_set&lt; future_extensions &gt;</label>
      </node>
      <node id="2449">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="2454">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="2455" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="2451">
        <label>optional&lt; uint32_t &gt;</label>
      </node>
      <node id="2455">
        <label>safe&lt; int64_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/proposal.hpp" line="70" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/proposal.hpp" bodystart="69" bodyend="98"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__create__operation_1ab6c89f4b39277c2c362050fd1e76c9b1" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual" ambiguityscope="graphene::chain::base_operation::"><scope>graphene::chain::proposal_create_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__create__operation_1ae244ca9ced52e6b775e9ac72921a78b7" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>committee_proposal</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__create__operation_1a139682525efeb84af7f1816c42b26ef3" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>expiration_time</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__create__operation_1a6e90f6317b32815f5bd500911197162d" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__create__operation_1a44dcdd9bdf2198de039700f72c3be51e" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__create__operation_1a87cbd7d7c3f35d0ae643029d010b1398" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__create__operation_1add9469f87efe146c498a2ec15c0794a3" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>fee_paying_account</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1ac7e2861a01bbaef8fbe5c5dcf5e73b38" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__create__operation_1afd72e778d7983044526ee06ddb1a72be" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>proposed_ops</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__create__operation_1af2fc94e217169c77500111593a89403f" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>review_period_seconds</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__create__operation_1a461648231991c2b74e8efdeab4d7134c" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_create_operation</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
