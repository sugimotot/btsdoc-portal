<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1public__key__type" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::public_key_type</compoundname>
    <includes refid="types_8hpp" local="no">types.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1public__key__type_1_1binary__key" prot="public">graphene::chain::public_key_type::binary_key</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1public__key__type_1a6b28f597090c5e62f9426fda0b8a1a94" prot="public" static="no" mutable="no">
        <type><ref refid="namespacefc_1_1ecc_1a86376367df56783963d35795bebddce6" kindref="member">fc::ecc::public_key_data</ref></type>
        <definition>fc::ecc::public_key_data graphene::chain::public_key_type::key_data</definition>
        <argsstring></argsstring>
        <name>key_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="248" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/types.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1public__key__type_1a1df262bae111b21b830a3119e88f9533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::public_key_type::public_key_type</definition>
        <argsstring>()</argsstring>
        <name>public_key_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="249" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1public__key__type_1a16f87f0c6b100b875277c92b7616db62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::public_key_type::public_key_type</definition>
        <argsstring>(const fc::ecc::public_key_data &amp;data)</argsstring>
        <name>public_key_type</name>
        <param>
          <type>const <ref refid="namespacefc_1_1ecc_1a86376367df56783963d35795bebddce6" kindref="member">fc::ecc::public_key_data</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="250" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="36" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1public__key__type_1a0b70a4a8dbfbbf5b8f5129f1aff24743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::public_key_type::public_key_type</definition>
        <argsstring>(const fc::ecc::public_key &amp;pubkey)</argsstring>
        <name>public_key_type</name>
        <param>
          <type>const fc::ecc::public_key &amp;</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="251" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="39" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1public__key__type_1a778e4376342e4e981b1aa461beac7873" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::public_key_type::public_key_type</definition>
        <argsstring>(const std::string &amp;base58str)</argsstring>
        <name>public_key_type</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>base58str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="252" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="42" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1public__key__type_1a5395355d93ea7097ea78c16756a9b07a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::public_key_type::operator fc::ecc::public_key_data</definition>
        <argsstring>() const</argsstring>
        <name>operator fc::ecc::public_key_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="253" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1public__key__type_1a64005aaf712187b03c6d1c7be3ecdfef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::public_key_type::operator fc::ecc::public_key</definition>
        <argsstring>() const</argsstring>
        <name>operator fc::ecc::public_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="254" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1public__key__type_1a20148f9bdbadbb7cb32a263da2542cf8" prot="public" static="no" const="yes" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::public_key_type::operator std::string</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="255" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="91" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1public__key__type_1a2f0cd33fa78a362f879578971ea747ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::public_key_type::is_valid_v1</definition>
        <argsstring>(const std::string &amp;base58str)</argsstring>
        <name>is_valid_v1</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>base58str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="260" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="68" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structgraphene_1_1chain_1_1public__key__type_1ae45fc6ccbbe67e543035c2e029c11d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const public_key_type &amp;p1, const fc::ecc::public_key &amp;p2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1public__key__type" kindref="compound">public_key_type</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const fc::ecc::public_key &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="256" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1chain_1_1public__key__type_1a250831242b09f812d0623bdd6f2c81b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const public_key_type &amp;p1, const public_key_type &amp;p2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1public__key__type" kindref="compound">public_key_type</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1public__key__type" kindref="compound">public_key_type</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="257" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1chain_1_1public__key__type_1a74a83df5416e37eed8ecc6fd8955ae14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const public_key_type &amp;p1, const public_key_type &amp;p2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1public__key__type" kindref="compound">public_key_type</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1public__key__type" kindref="compound">public_key_type</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="258" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="110" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="241" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/types.hpp" bodystart="240" bodyend="261"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1a2f0cd33fa78a362f879578971ea747ac" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>is_valid_v1</name></member>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1a6b28f597090c5e62f9426fda0b8a1a94" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>key_data</name></member>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1a64005aaf712187b03c6d1c7be3ecdfef" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>operator fc::ecc::public_key</name></member>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1a5395355d93ea7097ea78c16756a9b07a" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>operator fc::ecc::public_key_data</name></member>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1a20148f9bdbadbb7cb32a263da2542cf8" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>operator std::string</name></member>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1a74a83df5416e37eed8ecc6fd8955ae14" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>operator!=</name></member>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1ae45fc6ccbbe67e543035c2e029c11d9a" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>operator==</name></member>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1a250831242b09f812d0623bdd6f2c81b3" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>operator==</name></member>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1a1df262bae111b21b830a3119e88f9533" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>public_key_type</name></member>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1a16f87f0c6b100b875277c92b7616db62" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>public_key_type</name></member>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1a0b70a4a8dbfbbf5b8f5129f1aff24743" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>public_key_type</name></member>
      <member refid="structgraphene_1_1chain_1_1public__key__type_1a778e4376342e4e981b1aa461beac7873" prot="public" virt="non-virtual"><scope>graphene::chain::public_key_type</scope><name>public_key_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
