<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1account__name__eq__lit__predicate" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::account_name_eq_lit_predicate</compoundname>
    <includes refid="assert_8hpp" local="no">assert.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1account__name__eq__lit__predicate_1a028ef360bb4f08fa5cdbcfb5362236d5" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::account_name_eq_lit_predicate::account_id</definition>
        <argsstring></argsstring>
        <name>account_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/assert.hpp" line="34" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/assert.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1account__name__eq__lit__predicate_1aff12a0e0988cf976101ba5d9d283f187" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string graphene::chain::account_name_eq_lit_predicate::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/assert.hpp" line="35" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/assert.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1account__name__eq__lit__predicate_1ac1d5fbab0b93f995e8629a9e93500141" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::account_name_eq_lit_predicate::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform state-independent checks. Verify account_name is a valid account name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/assert.hpp" line="41" column="1" bodyfile="libraries/chain/protocol/assert.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Used to verify that account_id-&gt;name is equal to the given string literal. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="87">
        <label>graphene::chain::account_name_eq_lit_predicate</label>
        <link refid="structgraphene_1_1chain_1_1account__name__eq__lit__predicate"/>
        <childnode refid="88" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>string</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/assert.hpp" line="33" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/assert.hpp" bodystart="32" bodyend="42"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1account__name__eq__lit__predicate_1a028ef360bb4f08fa5cdbcfb5362236d5" prot="public" virt="non-virtual"><scope>graphene::chain::account_name_eq_lit_predicate</scope><name>account_id</name></member>
      <member refid="structgraphene_1_1chain_1_1account__name__eq__lit__predicate_1aff12a0e0988cf976101ba5d9d283f187" prot="public" virt="non-virtual"><scope>graphene::chain::account_name_eq_lit_predicate</scope><name>name</name></member>
      <member refid="structgraphene_1_1chain_1_1account__name__eq__lit__predicate_1ac1d5fbab0b93f995e8629a9e93500141" prot="public" virt="non-virtual"><scope>graphene::chain::account_name_eq_lit_predicate</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
