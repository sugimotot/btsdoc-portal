<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1app_1_1login__api" kind="class" language="C++" prot="public">
    <compoundname>graphene::app::login_api</compoundname>
    <includes refid="api_8hpp" local="no">api.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a5ce5ef10e0fd7b4929b084c45c7daaf9" prot="private" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1app_1_1application" kindref="compound">application</ref> &amp;</type>
        <definition>application&amp; graphene::app::login_api::_app</definition>
        <argsstring></argsstring>
        <name>_app</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="364" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1acf7883304d5927ce8d3ed8c4f6d7c058" prot="private" static="no" mutable="no">
        <type>optional&lt; fc::api&lt; <ref refid="classgraphene_1_1app_1_1block__api" kindref="compound">block_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;block_api&gt; &gt; graphene::app::login_api::_block_api</definition>
        <argsstring></argsstring>
        <name>_block_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="365" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1ac2e707cdd0d60fc6bf5ee02f38e8bf26" prot="private" static="no" mutable="no">
        <type>optional&lt; fc::api&lt; <ref refid="classgraphene_1_1app_1_1database__api" kindref="compound">database_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;database_api&gt; &gt; graphene::app::login_api::_database_api</definition>
        <argsstring></argsstring>
        <name>_database_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="366" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a7a552578b56755d8c4f0d0355a6c5c24" prot="private" static="no" mutable="no">
        <type>optional&lt; fc::api&lt; <ref refid="classgraphene_1_1app_1_1network__broadcast__api" kindref="compound">network_broadcast_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;network_broadcast_api&gt; &gt; graphene::app::login_api::_network_broadcast_api</definition>
        <argsstring></argsstring>
        <name>_network_broadcast_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="367" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1afdb76a3188c6951fd1ad01a8b04a1a26" prot="private" static="no" mutable="no">
        <type>optional&lt; fc::api&lt; <ref refid="classgraphene_1_1app_1_1network__node__api" kindref="compound">network_node_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;network_node_api&gt; &gt; graphene::app::login_api::_network_node_api</definition>
        <argsstring></argsstring>
        <name>_network_node_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="368" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a48f7b099dcf7396ca383d03d7883a685" prot="private" static="no" mutable="no">
        <type>optional&lt; fc::api&lt; <ref refid="classgraphene_1_1app_1_1history__api" kindref="compound">history_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;history_api&gt; &gt; graphene::app::login_api::_history_api</definition>
        <argsstring></argsstring>
        <name>_history_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="369" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1ac4e58d1ac2c6d94f5e08eff60a65f8f9" prot="private" static="no" mutable="no">
        <type>optional&lt; fc::api&lt; <ref refid="classgraphene_1_1app_1_1crypto__api" kindref="compound">crypto_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;crypto_api&gt; &gt; graphene::app::login_api::_crypto_api</definition>
        <argsstring></argsstring>
        <name>_crypto_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="370" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a308b14a9507b5a8f6ea70d4f1618d381" prot="private" static="no" mutable="no">
        <type>optional&lt; fc::api&lt; <ref refid="classgraphene_1_1app_1_1asset__api" kindref="compound">asset_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;asset_api&gt; &gt; graphene::app::login_api::_asset_api</definition>
        <argsstring></argsstring>
        <name>_asset_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="371" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a90ff8fbefc1f6c8a181665bd88942b1e" prot="private" static="no" mutable="no">
        <type>optional&lt; fc::api&lt; graphene::debug_witness::debug_api &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;graphene::debug_witness::debug_api&gt; &gt; graphene::app::login_api::_debug_api</definition>
        <argsstring></argsstring>
        <name>_debug_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="372" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a62a89e34324402187d2569c0e898e728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::app::login_api::login_api</definition>
        <argsstring>(application &amp;a)</argsstring>
        <name>login_api</name>
        <param>
          <type><ref refid="classgraphene_1_1app_1_1application" kindref="compound">application</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="330" column="1" bodyfile="libraries/app/api.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a131c27b7bdeaa79ee9a96325b42984b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::app::login_api::~login_api</definition>
        <argsstring>()</argsstring>
        <name>~login_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="331" column="1" bodyfile="libraries/app/api.cpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a4e4e3416ce008a51013e184d1dfc8005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::app::login_api::login</definition>
        <argsstring>(const string &amp;user, const string &amp;password)</argsstring>
        <name>login</name>
        <param>
          <type>const string &amp;</type>
          <declname>user</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Authenticate to the RPC server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>Username to login with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>Password to login with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if logged in successfully; false otherwise</para></simplesect>
<simplesect kind="note"><para>This must be called prior to requesting other APIs. Other APIs may not be accessible until the client has sucessfully authenticated. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="342" column="1" bodyfile="libraries/app/api.cpp" bodystart="55" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a1666f90312e73fac5bc03517bc711b76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>fc::api&lt; <ref refid="classgraphene_1_1app_1_1block__api" kindref="compound">block_api</ref> &gt;</type>
        <definition>fc::api&lt; block_api &gt; graphene::app::login_api::block</definition>
        <argsstring>() const</argsstring>
        <name>block</name>
        <briefdescription>
<para>Retrieve the network block API. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="344" column="1" bodyfile="libraries/app/api.cpp" bodystart="229" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a02954abfd619d66831082c9582260957" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>fc::api&lt; <ref refid="classgraphene_1_1app_1_1network__broadcast__api" kindref="compound">network_broadcast_api</ref> &gt;</type>
        <definition>fc::api&lt; network_broadcast_api &gt; graphene::app::login_api::network_broadcast</definition>
        <argsstring>() const</argsstring>
        <name>network_broadcast</name>
        <briefdescription>
<para>Retrieve the network broadcast API. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="346" column="1" bodyfile="libraries/app/api.cpp" bodystart="223" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a230c93547da7c329901881e62d55c684" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>fc::api&lt; <ref refid="classgraphene_1_1app_1_1database__api" kindref="compound">database_api</ref> &gt;</type>
        <definition>fc::api&lt; database_api &gt; graphene::app::login_api::database</definition>
        <argsstring>() const</argsstring>
        <name>database</name>
        <briefdescription>
<para>Retrieve the database API. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="348" column="1" bodyfile="libraries/app/api.cpp" bodystart="241" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a46518e2cdbd04ba7269d34e4bc16b0ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>fc::api&lt; <ref refid="classgraphene_1_1app_1_1history__api" kindref="compound">history_api</ref> &gt;</type>
        <definition>fc::api&lt; history_api &gt; graphene::app::login_api::history</definition>
        <argsstring>() const</argsstring>
        <name>history</name>
        <briefdescription>
<para>Retrieve the history API. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="350" column="1" bodyfile="libraries/app/api.cpp" bodystart="247" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a8802564b78614b7e523f380f3bcd74b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>fc::api&lt; <ref refid="classgraphene_1_1app_1_1network__node__api" kindref="compound">network_node_api</ref> &gt;</type>
        <definition>fc::api&lt; network_node_api &gt; graphene::app::login_api::network_node</definition>
        <argsstring>() const</argsstring>
        <name>network_node</name>
        <briefdescription>
<para>Retrieve the network node API. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="352" column="1" bodyfile="libraries/app/api.cpp" bodystart="235" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1ac43bf9cb81b730453750306b5ff954e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>fc::api&lt; <ref refid="classgraphene_1_1app_1_1crypto__api" kindref="compound">crypto_api</ref> &gt;</type>
        <definition>fc::api&lt; crypto_api &gt; graphene::app::login_api::crypto</definition>
        <argsstring>() const</argsstring>
        <name>crypto</name>
        <briefdescription>
<para>Retrieve the cryptography API. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="354" column="1" bodyfile="libraries/app/api.cpp" bodystart="253" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a9fdfdca9b3cef4d1278f0b42f2519ad6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>fc::api&lt; <ref refid="classgraphene_1_1app_1_1asset__api" kindref="compound">asset_api</ref> &gt;</type>
        <definition>fc::api&lt; asset_api &gt; graphene::app::login_api::asset</definition>
        <argsstring>() const</argsstring>
        <name>asset</name>
        <briefdescription>
<para>Retrieve the asset API. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="356" column="1" bodyfile="libraries/app/api.cpp" bodystart="259" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a2ff2d5871c1c74f42d614e450f338f82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>fc::api&lt; graphene::debug_witness::debug_api &gt;</type>
        <definition>fc::api&lt; graphene::debug_witness::debug_api &gt; graphene::app::login_api::debug</definition>
        <argsstring>() const</argsstring>
        <name>debug</name>
        <briefdescription>
<para>Retrieve the debug API (if available) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="358" column="1" bodyfile="libraries/app/api.cpp" bodystart="265" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a88370072aa9f85cebc9e183dccdac9d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::app::login_api::enable_api</definition>
        <argsstring>(const string &amp;api_name)</argsstring>
        <name>enable_api</name>
        <param>
          <type>const string &amp;</type>
          <declname>api_name</declname>
        </param>
        <briefdescription>
<para>Called to enable an API, not reflected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="361" column="1" bodyfile="libraries/app/api.cpp" bodystart="77" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classgraphene_1_1app_1_1login__api" kindref="compound">login_api</ref> class implements the bottom layer of the RPC API. </para>    </briefdescription>
    <detaileddescription>
<para>All other APIs must be requested from this API. </para>    </detaileddescription>
    <location file="libraries/app/include/graphene/app/api.hpp" line="328" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="327" bodyend="373"/>
    <listofallmembers>
      <member refid="classgraphene_1_1app_1_1login__api_1a5ce5ef10e0fd7b4929b084c45c7daaf9" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_app</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a308b14a9507b5a8f6ea70d4f1618d381" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_asset_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1acf7883304d5927ce8d3ed8c4f6d7c058" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_block_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1ac4e58d1ac2c6d94f5e08eff60a65f8f9" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_crypto_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1ac2e707cdd0d60fc6bf5ee02f38e8bf26" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_database_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a90ff8fbefc1f6c8a181665bd88942b1e" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_debug_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a48f7b099dcf7396ca383d03d7883a685" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_history_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a7a552578b56755d8c4f0d0355a6c5c24" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_network_broadcast_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1afdb76a3188c6951fd1ad01a8b04a1a26" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_network_node_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a9fdfdca9b3cef4d1278f0b42f2519ad6" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>asset</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a1666f90312e73fac5bc03517bc711b76" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>block</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1ac43bf9cb81b730453750306b5ff954e8" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>crypto</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a230c93547da7c329901881e62d55c684" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>database</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a2ff2d5871c1c74f42d614e450f338f82" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>debug</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a88370072aa9f85cebc9e183dccdac9d5" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>enable_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a46518e2cdbd04ba7269d34e4bc16b0ba" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>history</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a4e4e3416ce008a51013e184d1dfc8005" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>login</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a62a89e34324402187d2569c0e898e728" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>login_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a02954abfd619d66831082c9582260957" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>network_broadcast</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a8802564b78614b7e523f380f3bcd74b3" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>network_node</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a131c27b7bdeaa79ee9a96325b42984b2" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>~login_api</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
