<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1asset__symbol__eq__lit__predicate" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::asset_symbol_eq_lit_predicate</compoundname>
    <includes refid="assert_8hpp" local="no">assert.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__symbol__eq__lit__predicate_1aa79b8c28cf0c275518606d679386b3ab" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a8719a403aa47e9d369890c01d60d0bb2" kindref="member">asset_id_type</ref></type>
        <definition>asset_id_type graphene::chain::asset_symbol_eq_lit_predicate::asset_id</definition>
        <argsstring></argsstring>
        <name>asset_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/assert.hpp" line="49" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/assert.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__symbol__eq__lit__predicate_1a03ab9a625e5c86c6a5b359898be2bab3" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string graphene::chain::asset_symbol_eq_lit_predicate::symbol</definition>
        <argsstring></argsstring>
        <name>symbol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/assert.hpp" line="50" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/assert.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__symbol__eq__lit__predicate_1a90d1c30b7f5b0fa3dccea629bc94c6ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::asset_symbol_eq_lit_predicate::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform state independent checks. Verify symbol is a valid asset symbol. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/assert.hpp" line="56" column="1" bodyfile="libraries/chain/protocol/assert.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Used to verify that asset_id-&gt;symbol is equal to the given string literal. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="839">
        <label>string</label>
      </node>
      <node id="838">
        <label>graphene::chain::asset_symbol_eq_lit_predicate</label>
        <link refid="structgraphene_1_1chain_1_1asset__symbol__eq__lit__predicate"/>
        <childnode refid="839" relation="usage">
          <edgelabel>symbol</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/assert.hpp" line="48" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/assert.hpp" bodystart="47" bodyend="58"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1asset__symbol__eq__lit__predicate_1aa79b8c28cf0c275518606d679386b3ab" prot="public" virt="non-virtual"><scope>graphene::chain::asset_symbol_eq_lit_predicate</scope><name>asset_id</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__symbol__eq__lit__predicate_1a03ab9a625e5c86c6a5b359898be2bab3" prot="public" virt="non-virtual"><scope>graphene::chain::asset_symbol_eq_lit_predicate</scope><name>symbol</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__symbol__eq__lit__predicate_1a90d1c30b7f5b0fa3dccea629bc94c6ae" prot="public" virt="non-virtual"><scope>graphene::chain::asset_symbol_eq_lit_predicate</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
