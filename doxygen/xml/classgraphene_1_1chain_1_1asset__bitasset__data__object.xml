<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1chain_1_1asset__bitasset__data__object" kind="class" language="C++" prot="public">
    <compoundname>graphene::chain::asset_bitasset_data_object</compoundname>
    <basecompoundref prot="public" virt="non-virtual">graphene::db::abstract_object&lt; asset_bitasset_data_object &gt;</basecompoundref>
    <includes refid="asset__object_8hpp" local="no">asset_object.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a20e77723968f0bbafe4192946fd8fd38" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1price" kindref="compound">price</ref></type>
        <definition>price graphene::chain::asset_bitasset_data_object::settlement_price</definition>
        <argsstring></argsstring>
        <name>settlement_price</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In the event of a black swan, the swan price is saved in the settlement price, and all margin positions are settled at the same price with the siezed collateral being moved into the settlement fund. From this point on no further updates to the asset are permitted (no feeds, etc) and forced settlement occurs immediately when requested, using the settlement price and fund. Price at which force settlements of a black swanned asset will occur </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="206" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a55c343f6d6333ec3687b13c93577ee39" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::asset_bitasset_data_object::settlement_fund</definition>
        <argsstring></argsstring>
        <name>settlement_fund</name>
        <briefdescription>
<para>Amount of collateral which is available for force settlement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="208" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a8fdd72439535733275ff94cf326f7c29" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t graphene::chain::asset_bitasset_data_object::space_id</definition>
        <argsstring></argsstring>
        <name>space_id</name>
        <initializer>= <ref refid="namespacegraphene_1_1chain_1a92e55d4242187696c5e2c5eaafbd9400a81f35c04f1d3f3109dacaa6f2bef33c7" kindref="member">implementation_ids</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="171" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1afac568665bf8efe663e1c11325467f76" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t graphene::chain::asset_bitasset_data_object::type_id</definition>
        <argsstring></argsstring>
        <name>type_id</name>
        <initializer>= <ref refid="namespacegraphene_1_1chain_1ad3bef2f100b722a6c30fada38f6dcd73ac0f8ddafa1862266e201e2fb7e6759d1" kindref="member">impl_asset_bitasset_data_type</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="172" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1ab630e94f98a44dfd1211b0b21bb0d58a" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1bitasset__options" kindref="compound">bitasset_options</ref></type>
        <definition>bitasset_options graphene::chain::asset_bitasset_data_object::options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
<para>The tunable options for BitAssets are stored in this field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="175" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a1f24d3c3634bc4296ac62e387ac8d889" prot="public" static="no" mutable="no">
        <type>flat_map&lt; <ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref>, pair&lt; time_point_sec, <ref refid="structgraphene_1_1chain_1_1price__feed" kindref="compound">price_feed</ref> &gt; &gt;</type>
        <definition>flat_map&lt;account_id_type, pair&lt;time_point_sec,price_feed&gt; &gt; graphene::chain::asset_bitasset_data_object::feeds</definition>
        <argsstring></argsstring>
        <name>feeds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Feeds published for this asset. If issuer is not committee, the keys in this map are the feed publishing accounts; otherwise, the feed publishers are the currently active committee_members and witnesses and this map should be treated as an implementation detail. The timestamp on each feed is the time it was published. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="180" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a874b942d15af358de33636b530225f11" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1price__feed" kindref="compound">price_feed</ref></type>
        <definition>price_feed graphene::chain::asset_bitasset_data_object::current_feed</definition>
        <argsstring></argsstring>
        <name>current_feed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the currently active price feed, calculated as the median of values from the currently active feeds. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="183" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a8ff500d4aad42067bdcefa153d3d863f" prot="public" static="no" mutable="no">
        <type>time_point_sec</type>
        <definition>time_point_sec graphene::chain::asset_bitasset_data_object::current_feed_publication_time</definition>
        <argsstring></argsstring>
        <name>current_feed_publication_time</name>
        <briefdescription>
<para>This is the publication time of the oldest feed which was factored into current_feed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="185" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1af28db7bb58ddf850416f7346697e3b7c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::chain::asset_bitasset_data_object::is_prediction_market</definition>
        <argsstring></argsstring>
        <name>is_prediction_market</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>True if this asset implements a <ref refid="group__prediction__market" kindref="compound">Prediction Market</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="188" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a7150f03a6553d183c46191d2b718ba40" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::asset_bitasset_data_object::force_settled_volume</definition>
        <argsstring></argsstring>
        <name>force_settled_volume</name>
        <briefdescription>
<para>This is the volume of this asset which has been force-settled this maintanence interval. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="191" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1ae4e7f82312d123819d5168cca4721566" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type asset_bitasset_data_object::max_force_settlement_volume</definition>
        <argsstring>(share_type current_supply) const</argsstring>
        <name>max_force_settlement_volume</name>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
          <declname>current_supply</declname>
        </param>
        <briefdescription>
<para>Calculate the maximum force settlement volume per maintenance interval, given the current share supply. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="193" column="1" bodyfile="libraries/chain/asset_object.cpp" bodystart="33" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a906bc8ea2b54055d98213b84e27ebd2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::asset_bitasset_data_object::has_settlement</definition>
        <argsstring>() const</argsstring>
        <name>has_settlement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return true if there has been a black swan, false otherwise </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="196" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a376e0082aaf4e3fd5c5dff81b806bd10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>time_point_sec</type>
        <definition>time_point_sec graphene::chain::asset_bitasset_data_object::feed_expiration_time</definition>
        <argsstring>() const</argsstring>
        <name>feed_expiration_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="211" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="211" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a8f64d0eaf1627582964524d3a33f93a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::asset_bitasset_data_object::feed_is_expired_before_hardfork_615</definition>
        <argsstring>(time_point_sec current_time) const</argsstring>
        <name>feed_is_expired_before_hardfork_615</name>
        <param>
          <type>time_point_sec</type>
          <declname>current_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="213" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="213" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a90a163ff94d31c49ca86dda5e3b1895c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::asset_bitasset_data_object::feed_is_expired</definition>
        <argsstring>(time_point_sec current_time) const</argsstring>
        <name>feed_is_expired</name>
        <param>
          <type>time_point_sec</type>
          <declname>current_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="215" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="215" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a309160a4bf03d5658a12141a74b78500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::asset_bitasset_data_object::update_median_feeds</definition>
        <argsstring>(time_point_sec current_time)</argsstring>
        <name>update_median_feeds</name>
        <param>
          <type>time_point_sec</type>
          <declname>current_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="217" column="1" bodyfile="libraries/chain/asset_object.cpp" bodystart="46" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>contains properties that only apply to bitassets (market issued assets) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="370">
        <label>graphene::chain::asset_bitasset_data_object</label>
        <link refid="classgraphene_1_1chain_1_1asset__bitasset__data__object"/>
        <childnode refid="371" relation="public-inheritance">
        </childnode>
      </node>
      <node id="371">
        <label>graphene::db::abstract_object&lt; asset_bitasset_data_object &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="374">
        <label>time_point_sec</label>
      </node>
      <node id="379">
        <label>graphene::chain::bitasset_options</label>
        <link refid="structgraphene_1_1chain_1_1bitasset__options"/>
        <childnode refid="380" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
      </node>
      <node id="377">
        <label>graphene::chain::price</label>
        <link refid="structgraphene_1_1chain_1_1price"/>
        <childnode refid="378" relation="usage">
          <edgelabel>base</edgelabel>
          <edgelabel>quote</edgelabel>
        </childnode>
      </node>
      <node id="372">
        <label>graphene::chain::asset_bitasset_data_object</label>
        <link refid="classgraphene_1_1chain_1_1asset__bitasset__data__object"/>
        <childnode refid="373" relation="public-inheritance">
        </childnode>
        <childnode refid="374" relation="usage">
          <edgelabel>current_feed_publication_time</edgelabel>
        </childnode>
        <childnode refid="375" relation="usage">
          <edgelabel>settlement_fund</edgelabel>
          <edgelabel>force_settled_volume</edgelabel>
        </childnode>
        <childnode refid="376" relation="usage">
          <edgelabel>current_feed</edgelabel>
        </childnode>
        <childnode refid="379" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
        <childnode refid="377" relation="usage">
          <edgelabel>settlement_price</edgelabel>
        </childnode>
        <childnode refid="381" relation="usage">
          <edgelabel>feeds</edgelabel>
        </childnode>
      </node>
      <node id="380">
        <label>flat_set&lt; future_extensions &gt;</label>
      </node>
      <node id="376">
        <label>graphene::chain::price_feed</label>
        <link refid="structgraphene_1_1chain_1_1price__feed"/>
        <childnode refid="377" relation="usage">
          <edgelabel>core_exchange_rate</edgelabel>
          <edgelabel>settlement_price</edgelabel>
        </childnode>
      </node>
      <node id="378">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="375" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="375">
        <label>safe&lt; int64_t &gt;</label>
      </node>
      <node id="373">
        <label>graphene::db::abstract_object&lt; asset_bitasset_data_object &gt;</label>
      </node>
      <node id="381">
        <label>flat_map&lt; account_id_type, pair&lt; time_point_sec, graphene::chain::price_feed &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="169" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="168" bodyend="218"/>
    <listofallmembers>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a874b942d15af358de33636b530225f11" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>current_feed</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a8ff500d4aad42067bdcefa153d3d863f" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>current_feed_publication_time</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a376e0082aaf4e3fd5c5dff81b806bd10" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>feed_expiration_time</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a90a163ff94d31c49ca86dda5e3b1895c" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>feed_is_expired</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a8f64d0eaf1627582964524d3a33f93a3" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>feed_is_expired_before_hardfork_615</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a1f24d3c3634bc4296ac62e387ac8d889" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>feeds</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a7150f03a6553d183c46191d2b718ba40" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>force_settled_volume</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a906bc8ea2b54055d98213b84e27ebd2a" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>has_settlement</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1af28db7bb58ddf850416f7346697e3b7c" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>is_prediction_market</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1ae4e7f82312d123819d5168cca4721566" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>max_force_settlement_volume</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1ab630e94f98a44dfd1211b0b21bb0d58a" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>options</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a55c343f6d6333ec3687b13c93577ee39" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>settlement_fund</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a20e77723968f0bbafe4192946fd8fd38" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>settlement_price</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a8fdd72439535733275ff94cf326f7c29" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>space_id</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1afac568665bf8efe663e1c11325467f76" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>type_id</name></member>
      <member refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a309160a4bf03d5658a12141a74b78500" prot="public" virt="non-virtual"><scope>graphene::chain::asset_bitasset_data_object</scope><name>update_median_feeds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
