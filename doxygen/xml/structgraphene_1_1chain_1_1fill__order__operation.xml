<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1fill__order__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::fill_order_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="market_8hpp" local="no">market.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1fill__order__operation_1_1fee__parameters__type" prot="public">graphene::chain::fill_order_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1fill__order__operation_1ad45ea466744dbedeefe570cafb2b32a9" prot="public" static="no" mutable="no">
        <type>object_id_type</type>
        <definition>object_id_type graphene::chain::fill_order_operation::order_id</definition>
        <argsstring></argsstring>
        <name>order_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="141" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1fill__order__operation_1a2aa7375c4f7d269e2d004a2080f63e4d" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::fill_order_operation::account_id</definition>
        <argsstring></argsstring>
        <name>account_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="142" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1fill__order__operation_1af708e4ef7ab7c82655675db343755950" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::fill_order_operation::pays</definition>
        <argsstring></argsstring>
        <name>pays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="143" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1fill__order__operation_1aa7f5da310116f935bdf47e0003b6eef7" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::fill_order_operation::receives</definition>
        <argsstring></argsstring>
        <name>receives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="144" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1fill__order__operation_1a50e3a6eae78e9052b4f24eebbcb2bfe1" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::fill_order_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="145" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1fill__order__operation_1aeb2a5d0943aa240a8e7e4c745bfb2e76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::fill_order_operation::fill_order_operation</definition>
        <argsstring>()</argsstring>
        <name>fill_order_operation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="137" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1fill__order__operation_1a147dd1d67858d11c5da1bcb241bac720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::fill_order_operation::fill_order_operation</definition>
        <argsstring>(object_id_type o, account_id_type a, asset p, asset r, asset f)</argsstring>
        <name>fill_order_operation</name>
        <param>
          <type>object_id_type</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="138" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="138" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1fill__order__operation_1ab1e8dd5dd38d9072230da6beb29fbbbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pair&lt; <ref refid="namespacegraphene_1_1chain_1a8719a403aa47e9d369890c01d60d0bb2" kindref="member">asset_id_type</ref>, <ref refid="namespacegraphene_1_1chain_1a8719a403aa47e9d369890c01d60d0bb2" kindref="member">asset_id_type</ref> &gt;</type>
        <definition>pair&lt;asset_id_type,asset_id_type&gt; graphene::chain::fill_order_operation::get_market</definition>
        <argsstring>() const</argsstring>
        <name>get_market</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="148" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1fill__order__operation_1a9c4c56c139aefd568b68d57e1a676666" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::fill_order_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="154" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1fill__order__operation_1a0fa511cd9060ca33e11bec07127bf83c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::fill_order_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="155" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1fill__order__operation_1a5424347776050da5e038b905a0a06926" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::fill_order_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1fill__order__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>This is a virtual operation; there is no fee. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="158" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="158" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>This is a virtual operation that is created while matching orders and emitted for the purpose of accurately tracking account history, accelerating a reindex. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1787">
        <label>graphene::chain::fill_order_operation</label>
        <link refid="structgraphene_1_1chain_1_1fill__order__operation"/>
        <childnode refid="1788" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1788">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1789">
        <label>graphene::chain::fill_order_operation</label>
        <link refid="structgraphene_1_1chain_1_1fill__order__operation"/>
        <childnode refid="1790" relation="public-inheritance">
        </childnode>
        <childnode refid="1791" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>receives</edgelabel>
          <edgelabel>pays</edgelabel>
        </childnode>
      </node>
      <node id="1790">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="1791">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="1792" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="1792">
        <label>safe&lt; int64_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="134" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="133" bodyend="159"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1fill__order__operation_1a2aa7375c4f7d269e2d004a2080f63e4d" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>account_id</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1fill__order__operation_1a5424347776050da5e038b905a0a06926" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual" ambiguityscope="graphene::chain::base_operation::"><scope>graphene::chain::fill_order_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1fill__order__operation_1a50e3a6eae78e9052b4f24eebbcb2bfe1" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1fill__order__operation_1a9c4c56c139aefd568b68d57e1a676666" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1fill__order__operation_1aeb2a5d0943aa240a8e7e4c745bfb2e76" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>fill_order_operation</name></member>
      <member refid="structgraphene_1_1chain_1_1fill__order__operation_1a147dd1d67858d11c5da1bcb241bac720" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>fill_order_operation</name></member>
      <member refid="structgraphene_1_1chain_1_1fill__order__operation_1ab1e8dd5dd38d9072230da6beb29fbbbe" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>get_market</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1ac7e2861a01bbaef8fbe5c5dcf5e73b38" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1fill__order__operation_1ad45ea466744dbedeefe570cafb2b32a9" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>order_id</name></member>
      <member refid="structgraphene_1_1chain_1_1fill__order__operation_1af708e4ef7ab7c82655675db343755950" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>pays</name></member>
      <member refid="structgraphene_1_1chain_1_1fill__order__operation_1aa7f5da310116f935bdf47e0003b6eef7" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>receives</name></member>
      <member refid="structgraphene_1_1chain_1_1fill__order__operation_1a0fa511cd9060ca33e11bec07127bf83c" prot="public" virt="non-virtual"><scope>graphene::chain::fill_order_operation</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
