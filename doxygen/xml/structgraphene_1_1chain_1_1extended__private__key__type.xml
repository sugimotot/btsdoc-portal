<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1extended__private__key__type" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::extended_private_key_type</compoundname>
    <includes refid="types_8hpp" local="no">types.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1extended__private__key__type_1_1binary__key" prot="public">graphene::chain::extended_private_key_type::binary_key</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1extended__private__key__type_1a0ff5a39bb436df11ac0873cf22249bec" prot="public" static="no" mutable="no">
        <type>fc::ecc::extended_key_data</type>
        <definition>fc::ecc::extended_key_data graphene::chain::extended_private_key_type::key_data</definition>
        <argsstring></argsstring>
        <name>key_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="294" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/types.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1extended__private__key__type_1a8161617e7e8c5f94854e17f5633bfee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::extended_private_key_type::extended_private_key_type</definition>
        <argsstring>()</argsstring>
        <name>extended_private_key_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="296" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1extended__private__key__type_1a084dc3d3bcdd892f4464809f23cc3114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::extended_private_key_type::extended_private_key_type</definition>
        <argsstring>(const fc::ecc::extended_key_data &amp;data)</argsstring>
        <name>extended_private_key_type</name>
        <param>
          <type>const fc::ecc::extended_key_data &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="297" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="173" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1extended__private__key__type_1a442a47392e2563854c8acbc958804f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::extended_private_key_type::extended_private_key_type</definition>
        <argsstring>(const fc::ecc::extended_private_key &amp;extprivkey)</argsstring>
        <name>extended_private_key_type</name>
        <param>
          <type>const fc::ecc::extended_private_key &amp;</type>
          <declname>extprivkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="298" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1extended__private__key__type_1ab75d5deedcb595a578a44a80c83f6b64" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::extended_private_key_type::extended_private_key_type</definition>
        <argsstring>(const std::string &amp;base58str)</argsstring>
        <name>extended_private_key_type</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>base58str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="299" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="181" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1extended__private__key__type_1ae036d66eefd3941d5505d50ba50497f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::extended_private_key_type::operator fc::ecc::extended_private_key</definition>
        <argsstring>() const</argsstring>
        <name>operator fc::ecc::extended_private_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="300" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1extended__private__key__type_1a63e8f758fbe1d48bc74fdf2b0e61aca3" prot="public" static="no" const="yes" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::extended_private_key_type::operator std::string</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="301" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="199" bodyend="206"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structgraphene_1_1chain_1_1extended__private__key__type_1adae8bbe83f14f1c7de0e0f68568fb128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const extended_private_key_type &amp;p1, const fc::ecc::extended_private_key &amp;p2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1extended__private__key__type" kindref="compound">extended_private_key_type</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const fc::ecc::extended_private_key &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="302" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1chain_1_1extended__private__key__type_1a04a1eead5cc94f57714e7df42396332f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const extended_private_key_type &amp;p1, const extended_private_key_type &amp;p2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1extended__private__key__type" kindref="compound">extended_private_key_type</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1extended__private__key__type" kindref="compound">extended_private_key_type</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="303" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1chain_1_1extended__private__key__type_1af7e18fbc07c18779eb3f309dcb9cefe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const extended_private_key_type &amp;p1, const extended_private_key_type &amp;p2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1extended__private__key__type" kindref="compound">extended_private_key_type</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1extended__private__key__type" kindref="compound">extended_private_key_type</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="304" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="286" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/types.hpp" bodystart="285" bodyend="305"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1extended__private__key__type_1a8161617e7e8c5f94854e17f5633bfee8" prot="public" virt="non-virtual"><scope>graphene::chain::extended_private_key_type</scope><name>extended_private_key_type</name></member>
      <member refid="structgraphene_1_1chain_1_1extended__private__key__type_1a084dc3d3bcdd892f4464809f23cc3114" prot="public" virt="non-virtual"><scope>graphene::chain::extended_private_key_type</scope><name>extended_private_key_type</name></member>
      <member refid="structgraphene_1_1chain_1_1extended__private__key__type_1a442a47392e2563854c8acbc958804f68" prot="public" virt="non-virtual"><scope>graphene::chain::extended_private_key_type</scope><name>extended_private_key_type</name></member>
      <member refid="structgraphene_1_1chain_1_1extended__private__key__type_1ab75d5deedcb595a578a44a80c83f6b64" prot="public" virt="non-virtual"><scope>graphene::chain::extended_private_key_type</scope><name>extended_private_key_type</name></member>
      <member refid="structgraphene_1_1chain_1_1extended__private__key__type_1a0ff5a39bb436df11ac0873cf22249bec" prot="public" virt="non-virtual"><scope>graphene::chain::extended_private_key_type</scope><name>key_data</name></member>
      <member refid="structgraphene_1_1chain_1_1extended__private__key__type_1ae036d66eefd3941d5505d50ba50497f1" prot="public" virt="non-virtual"><scope>graphene::chain::extended_private_key_type</scope><name>operator fc::ecc::extended_private_key</name></member>
      <member refid="structgraphene_1_1chain_1_1extended__private__key__type_1a63e8f758fbe1d48bc74fdf2b0e61aca3" prot="public" virt="non-virtual"><scope>graphene::chain::extended_private_key_type</scope><name>operator std::string</name></member>
      <member refid="structgraphene_1_1chain_1_1extended__private__key__type_1af7e18fbc07c18779eb3f309dcb9cefe8" prot="public" virt="non-virtual"><scope>graphene::chain::extended_private_key_type</scope><name>operator!=</name></member>
      <member refid="structgraphene_1_1chain_1_1extended__private__key__type_1adae8bbe83f14f1c7de0e0f68568fb128" prot="public" virt="non-virtual"><scope>graphene::chain::extended_private_key_type</scope><name>operator==</name></member>
      <member refid="structgraphene_1_1chain_1_1extended__private__key__type_1a04a1eead5cc94f57714e7df42396332f" prot="public" virt="non-virtual"><scope>graphene::chain::extended_private_key_type</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
