<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1asset__issue__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::asset_issue_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1asset__issue__operation_1_1fee__parameters__type" prot="public">graphene::chain::asset_issue_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__issue__operation_1ad0f5a2baa751aa0ec5440725d817fa92" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::asset_issue_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="393" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__issue__operation_1a580282df5e465e2f48cb13bc99d52881" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::asset_issue_operation::issuer</definition>
        <argsstring></argsstring>
        <name>issuer</name>
        <briefdescription>
<para>Must be asset_to_issue-&gt;asset_id-&gt;issuer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="394" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__issue__operation_1aa9b85e531cedaa9185965fad534d01e9" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::asset_issue_operation::asset_to_issue</definition>
        <argsstring></argsstring>
        <name>asset_to_issue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="395" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__issue__operation_1ad3a442dc3ec8a370bdaed13f7b286852" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::asset_issue_operation::issue_to_account</definition>
        <argsstring></argsstring>
        <name>issue_to_account</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="396" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__issue__operation_1a29eed183223fc44098abec0372ebcdbc" prot="public" static="no" mutable="no">
        <type>optional&lt; <ref refid="structgraphene_1_1chain_1_1memo__data" kindref="compound">memo_data</ref> &gt;</type>
        <definition>optional&lt;memo_data&gt; graphene::chain::asset_issue_operation::memo</definition>
        <argsstring></argsstring>
        <name>memo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>user provided data encrypted to the memo key of the &quot;to&quot; account </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="400" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__issue__operation_1ade42d5033eab51a635890f0600579a23" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gae0096750377f6e9d61dba5765284de99" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::chain::asset_issue_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="401" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="401" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__issue__operation_1a2305d290b4db0865a892d9f583425551" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::asset_issue_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="403" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="403" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__issue__operation_1aabac3bb8c8d4716a57a3829fec634d93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::asset_issue_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="404" column="1" bodyfile="libraries/chain/protocol/asset_ops.cpp" bodystart="159" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__issue__operation_1a57dfd1647adabb2144aa9eedcacec617" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::asset_issue_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1asset__issue__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="405" column="1" bodyfile="libraries/chain/protocol/asset_ops.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="644">
        <label>graphene::chain::asset_issue_operation</label>
        <link refid="structgraphene_1_1chain_1_1asset__issue__operation"/>
        <childnode refid="645" relation="public-inheritance">
        </childnode>
      </node>
      <node id="645">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="648">
        <label>flat_set&lt; future_extensions &gt;</label>
      </node>
      <node id="646">
        <label>graphene::chain::asset_issue_operation</label>
        <link refid="structgraphene_1_1chain_1_1asset__issue__operation"/>
        <childnode refid="647" relation="public-inheritance">
        </childnode>
        <childnode refid="648" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="649" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>asset_to_issue</edgelabel>
        </childnode>
        <childnode refid="651" relation="usage">
          <edgelabel>memo</edgelabel>
        </childnode>
      </node>
      <node id="647">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="649">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="650" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="650">
        <label>safe&lt; int64_t &gt;</label>
      </node>
      <node id="651">
        <label>optional&lt; graphene::chain::memo_data &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="387" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="386" bodyend="406"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1asset__issue__operation_1aa9b85e531cedaa9185965fad534d01e9" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>asset_to_issue</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__issue__operation_1a57dfd1647adabb2144aa9eedcacec617" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual" ambiguityscope="graphene::chain::base_operation::"><scope>graphene::chain::asset_issue_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__issue__operation_1ade42d5033eab51a635890f0600579a23" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__issue__operation_1ad0f5a2baa751aa0ec5440725d817fa92" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__issue__operation_1a2305d290b4db0865a892d9f583425551" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1ac7e2861a01bbaef8fbe5c5dcf5e73b38" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__issue__operation_1ad3a442dc3ec8a370bdaed13f7b286852" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>issue_to_account</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__issue__operation_1a580282df5e465e2f48cb13bc99d52881" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>issuer</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__issue__operation_1a29eed183223fc44098abec0372ebcdbc" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>memo</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__issue__operation_1aabac3bb8c8d4716a57a3829fec634d93" prot="public" virt="non-virtual"><scope>graphene::chain::asset_issue_operation</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
