<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1fba__distribute__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::fba_distribute_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="fba_8hpp" local="no">fba.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1fba__distribute__operation_1_1fee__parameters__type" prot="public">graphene::chain::fba_distribute_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1fba__distribute__operation_1af82a7d4bf6d08c90a6b0e36af3fdf1cb" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::fba_distribute_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/fba.hpp" line="33" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/fba.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1fba__distribute__operation_1a15b617c4e5e55191db21964d2127a6e4" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::fba_distribute_operation::account_id</definition>
        <argsstring></argsstring>
        <name>account_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/fba.hpp" line="34" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/fba.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1fba__distribute__operation_1aeace43e3f8a3cf889c00192e2f551bbe" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1ae028c4bc900cad37bb0ae88921582119" kindref="member">fba_accumulator_id_type</ref></type>
        <definition>fba_accumulator_id_type graphene::chain::fba_distribute_operation::fba_id</definition>
        <argsstring></argsstring>
        <name>fba_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/fba.hpp" line="35" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/fba.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1fba__distribute__operation_1afdceae5cb745e06596ab4e36f002bf44" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::fba_distribute_operation::amount</definition>
        <argsstring></argsstring>
        <name>amount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/fba.hpp" line="36" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/fba.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1fba__distribute__operation_1a00c90a9227e8681ff4f7e65e3e22d46a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::fba_distribute_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/fba.hpp" line="38" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/fba.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1fba__distribute__operation_1ad8309cda3daaea568ee9b5b789882b6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::fba_distribute_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/fba.hpp" line="39" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/fba.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1fba__distribute__operation_1a7b915fdb1df817549f539fba945c4e2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::fba_distribute_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1fba__distribute__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/fba.hpp" line="40" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/fba.hpp" bodystart="40" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1683">
        <label>graphene::chain::fba_distribute_operation</label>
        <link refid="structgraphene_1_1chain_1_1fba__distribute__operation"/>
        <childnode refid="1684" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1684">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1685">
        <label>graphene::chain::fba_distribute_operation</label>
        <link refid="structgraphene_1_1chain_1_1fba__distribute__operation"/>
        <childnode refid="1686" relation="public-inheritance">
        </childnode>
        <childnode refid="1687" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
        <childnode refid="1688" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
      </node>
      <node id="1686">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="1688">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="1687" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="1687">
        <label>safe&lt; int64_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/fba.hpp" line="30" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/fba.hpp" bodystart="29" bodyend="41"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1fba__distribute__operation_1a15b617c4e5e55191db21964d2127a6e4" prot="public" virt="non-virtual"><scope>graphene::chain::fba_distribute_operation</scope><name>account_id</name></member>
      <member refid="structgraphene_1_1chain_1_1fba__distribute__operation_1afdceae5cb745e06596ab4e36f002bf44" prot="public" virt="non-virtual"><scope>graphene::chain::fba_distribute_operation</scope><name>amount</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::fba_distribute_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1fba__distribute__operation_1a7b915fdb1df817549f539fba945c4e2c" prot="public" virt="non-virtual"><scope>graphene::chain::fba_distribute_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual" ambiguityscope="graphene::chain::base_operation::"><scope>graphene::chain::fba_distribute_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1fba__distribute__operation_1aeace43e3f8a3cf889c00192e2f551bbe" prot="public" virt="non-virtual"><scope>graphene::chain::fba_distribute_operation</scope><name>fba_id</name></member>
      <member refid="structgraphene_1_1chain_1_1fba__distribute__operation_1af82a7d4bf6d08c90a6b0e36af3fdf1cb" prot="public" virt="non-virtual"><scope>graphene::chain::fba_distribute_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1fba__distribute__operation_1a00c90a9227e8681ff4f7e65e3e22d46a" prot="public" virt="non-virtual"><scope>graphene::chain::fba_distribute_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::fba_distribute_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1ac7e2861a01bbaef8fbe5c5dcf5e73b38" prot="public" virt="non-virtual"><scope>graphene::chain::fba_distribute_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::fba_distribute_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1fba__distribute__operation_1ad8309cda3daaea568ee9b5b789882b6c" prot="public" virt="non-virtual"><scope>graphene::chain::fba_distribute_operation</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
