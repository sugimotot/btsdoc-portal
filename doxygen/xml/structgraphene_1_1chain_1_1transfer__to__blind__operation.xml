<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1transfer__to__blind__operation" kind="class" language="C++" prot="public">
    <compoundname>graphene::chain::transfer_to_blind_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="confidential_8hpp" local="no">confidential.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1transfer__to__blind__operation_1_1fee__parameters__type" prot="public">graphene::chain::transfer_to_blind_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a6238c8475a3bab5e80ff5acd7f975788" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::transfer_to_blind_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="156" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a99f3a941d3812ce817fa2eb69facd77d" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::transfer_to_blind_operation::amount</definition>
        <argsstring></argsstring>
        <name>amount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="157" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a219f1c8046b2f508d679802f0ada66fa" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::transfer_to_blind_operation::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="158" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1transfer__to__blind__operation_1adbc7c2890223b378ba4e3aa3c865e4ef" prot="public" static="no" mutable="no">
        <type>blind_factor_type</type>
        <definition>blind_factor_type graphene::chain::transfer_to_blind_operation::blinding_factor</definition>
        <argsstring></argsstring>
        <name>blinding_factor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="159" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1transfer__to__blind__operation_1adc3e33caa7f009b885a3914b7d9f1aa8" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="structgraphene_1_1chain_1_1blind__output" kindref="compound">blind_output</ref> &gt;</type>
        <definition>vector&lt;blind_output&gt; graphene::chain::transfer_to_blind_operation::outputs</definition>
        <argsstring></argsstring>
        <name>outputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="160" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a9623ed59fc5ca151a9bb38271c59e94e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::transfer_to_blind_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="162" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a2b19cb0bbed7e46502ecb9cb25e15f1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::transfer_to_blind_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>require all outputs to be sorted prevents duplicates AND prevents implementations from accidentally leaking information by how they arrange commitments. </para>        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="163" column="1" bodyfile="libraries/chain/protocol/confidential.cpp" bodystart="34" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a121b5757d64310b20d0a3cf73ff8cec0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::transfer_to_blind_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1transfer__to__blind__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <defname>k</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="164" column="1" bodyfile="libraries/chain/protocol/confidential.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Converts public account balance to a blinded or stealth balance. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2866">
        <label>graphene::chain::transfer_to_blind_operation</label>
        <link refid="structgraphene_1_1chain_1_1transfer__to__blind__operation"/>
        <childnode refid="2867" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2867">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2870">
        <label>vector&lt; graphene::chain::blind_output &gt;</label>
      </node>
      <node id="2868">
        <label>graphene::chain::transfer_to_blind_operation</label>
        <link refid="structgraphene_1_1chain_1_1transfer__to__blind__operation"/>
        <childnode refid="2869" relation="public-inheritance">
        </childnode>
        <childnode refid="2870" relation="usage">
          <edgelabel>outputs</edgelabel>
        </childnode>
        <childnode refid="2871" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>amount</edgelabel>
        </childnode>
        <childnode refid="2873" relation="usage">
          <edgelabel>blinding_factor</edgelabel>
        </childnode>
      </node>
      <node id="2873">
        <label>blind_factor_type</label>
      </node>
      <node id="2869">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="2871">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="2872" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="2872">
        <label>safe&lt; int64_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="149" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="148" bodyend="165"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a99f3a941d3812ce817fa2eb69facd77d" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>amount</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__to__blind__operation_1adbc7c2890223b378ba4e3aa3c865e4ef" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>blinding_factor</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a121b5757d64310b20d0a3cf73ff8cec0" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual" ambiguityscope="graphene::chain::base_operation::"><scope>graphene::chain::transfer_to_blind_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a6238c8475a3bab5e80ff5acd7f975788" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a9623ed59fc5ca151a9bb38271c59e94e" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a219f1c8046b2f508d679802f0ada66fa" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>from</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1ac7e2861a01bbaef8fbe5c5dcf5e73b38" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__to__blind__operation_1adc3e33caa7f009b885a3914b7d9f1aa8" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>outputs</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__to__blind__operation_1a2b19cb0bbed7e46502ecb9cb25e15f1f" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_to_blind_operation</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
