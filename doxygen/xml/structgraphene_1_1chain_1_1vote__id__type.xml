<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1vote__id__type" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::vote_id_type</compoundname>
    <includes refid="vote_8hpp" local="no">vote.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959" prot="public" static="no">
        <name>vote_type</name>
        <enumvalue id="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959a9b26c4bf353264a323835dd9dc284d7c" prot="public">
          <name>committee</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959ae6e1a236714124fc4f440755d6ecb0b3" prot="public">
          <name>witness</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959a4e97683ede8032e1f006ee4a76d25f06" prot="public">
          <name>worker</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959a6934b1b5f6cd7b99746abf35fb1f4eee" prot="public">
          <name>VOTE_TYPE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="63" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="62" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1vote__id__type_1a136b087e04672231e6ba5897474f3786" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::chain::vote_id_type::content</definition>
        <argsstring></argsstring>
        <name>content</name>
        <briefdescription>
<para>Lower 8 bits are type; upper 24 bits are instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="59" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structgraphene_1_1chain_1_1vote__id__type_1a5c46a07b7559a27aae62782ee0a26897" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(vote_id_type v)</argsstring>
        <name>hash_value</name>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="61" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1vote__id__type_1a13d7a33bcd3d23695223987852c04967" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::vote_id_type::vote_id_type</definition>
        <argsstring>()</argsstring>
        <name>vote_id_type</name>
        <briefdescription>
<para>Default constructor. Sets type and instance to 0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="71" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1vote__id__type_1a8eae3ef02cd51f1aa620dc05c323138f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::vote_id_type::vote_id_type</definition>
        <argsstring>(vote_type type, uint32_t instance=0)</argsstring>
        <name>vote_id_type</name>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959" kindref="member">vote_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instance</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Construct this <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref> with provided type and instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="73" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1vote__id__type_1ad6ef3ea1b4e1bd60457704a097b85bb9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::vote_id_type::vote_id_type</definition>
        <argsstring>(const std::string &amp;serial)</argsstring>
        <name>vote_id_type</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
<para>Construct this <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref> from a serial string in the form &quot;type:instance&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="77" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1vote__id__type_1aa56496f2bfdf9ba4bf666f3811562948" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::vote_id_type::set_type</definition>
        <argsstring>(vote_type type)</argsstring>
        <name>set_type</name>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959" kindref="member">vote_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Set the type of this <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="85" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="85" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1vote__id__type_1a62b702f4efded39e18fa8a6b23578589" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959" kindref="member">vote_type</ref></type>
        <definition>vote_type graphene::chain::vote_id_type::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
<para>Get the type of this <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="91" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1vote__id__type_1a8550aab05d4c194edb4dbafc7c9785e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::vote_id_type::set_instance</definition>
        <argsstring>(uint32_t instance)</argsstring>
        <name>set_instance</name>
        <param>
          <type>uint32_t</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
<para>Set the instance of this <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="97" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1vote__id__type_1af92aa3615f8c0295a2b8f539b16baddb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t graphene::chain::vote_id_type::instance</definition>
        <argsstring>() const</argsstring>
        <name>instance</name>
        <briefdescription>
<para>Get the instance of this <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="104" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1vote__id__type_1a8d79a13cd81b27d745637761fa067eb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref> &amp;</type>
        <definition>vote_id_type&amp; graphene::chain::vote_id_type::operator=</definition>
        <argsstring>(vote_id_type other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="109" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1vote__id__type_1aafe79dca72f641c4835e651a71efc337" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref> &amp;</type>
        <definition>vote_id_type&amp; graphene::chain::vote_id_type::operator=</definition>
        <argsstring>(uint32_t instance)</argsstring>
        <name>operator=</name>
        <param>
          <type>uint32_t</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
<para>Set the instance of this <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="115" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1vote__id__type_1a54c05156abfdebe836b9a7ee3f8b66fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::vote_id_type::operator uint32_t</definition>
        <argsstring>() const</argsstring>
        <name>operator uint32_t</name>
        <briefdescription>
<para>Get the instance of this <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="121" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1vote__id__type_1aa845c2d404d15f0ae25e4efd4b0c0c6e" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::vote_id_type::operator std::string</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string</name>
        <briefdescription>
<para>Convert this <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref> to a serial string in the form &quot;type:instance&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="127" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An ID for some votable object. </para>    </briefdescription>
    <detaileddescription>
<para>This class stores an ID for a votable object. The ID is comprised of two fields: a type, and an instance. The type field stores which kind of object is being voted on, and the instance stores which specific object of that type is being referenced by this ID.</para><para>A value of <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref> is implicitly convertible to an unsigned 32-bit integer containing only the instance. It may also be implicitly assigned from a uint32_t, which will update the instance. It may not, however, be implicitly constructed from a uint32_t, as in this case, the type would be unknown.</para><para>On the wire, a <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref> is represented as a 32-bit integer with the type in the lower 8 bits and the instance in the upper 24 bits. This means that types may never exceed 8 bits, and instances may never exceed 24 bits.</para><para>In JSON, a <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref> is represented as a string &quot;type:instance&quot;, i.e. &quot;1:5&quot; would be type 1 and instance 5.</para><para><simplesect kind="note"><para>In the Graphene protocol, <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">vote_id_type</ref> instances are unique across types; that is to say, if an object of type 1 has instance 4, an object of type 0 may not also have instance 4. In other words, the type is not a namespace for instances; it is only an informational field. </para></simplesect>
</para>    </detaileddescription>
    <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="57" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/vote.hpp" bodystart="56" bodyend="131"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959a9b26c4bf353264a323835dd9dc284d7c" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>committee</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1a136b087e04672231e6ba5897474f3786" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>content</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1a5c46a07b7559a27aae62782ee0a26897" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>hash_value</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1af92aa3615f8c0295a2b8f539b16baddb" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>instance</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1aa845c2d404d15f0ae25e4efd4b0c0c6e" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>operator std::string</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1a54c05156abfdebe836b9a7ee3f8b66fe" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>operator uint32_t</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1a8d79a13cd81b27d745637761fa067eb9" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>operator=</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1aafe79dca72f641c4835e651a71efc337" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>operator=</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1a8550aab05d4c194edb4dbafc7c9785e9" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>set_instance</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1aa56496f2bfdf9ba4bf666f3811562948" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>set_type</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1a62b702f4efded39e18fa8a6b23578589" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>type</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1a13d7a33bcd3d23695223987852c04967" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>vote_id_type</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1a8eae3ef02cd51f1aa620dc05c323138f" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>vote_id_type</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1ad6ef3ea1b4e1bd60457704a097b85bb9" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>vote_id_type</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>vote_type</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959a6934b1b5f6cd7b99746abf35fb1f4eee" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>VOTE_TYPE_COUNT</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959ae6e1a236714124fc4f440755d6ecb0b3" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>witness</name></member>
      <member refid="structgraphene_1_1chain_1_1vote__id__type_1aaacdf69f2981cece125da0526fa03959a4e97683ede8032e1f006ee4a76d25f06" prot="public" virt="non-virtual"><scope>graphene::chain::vote_id_type</scope><name>worker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
