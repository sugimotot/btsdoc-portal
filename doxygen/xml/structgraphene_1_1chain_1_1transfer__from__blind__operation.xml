<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1transfer__from__blind__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::transfer_from_blind_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="confidential_8hpp" local="no">confidential.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1transfer__from__blind__operation_1_1fee__parameters__type" prot="public">graphene::chain::transfer_from_blind_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1transfer__from__blind__operation_1a9578a35937dca8fab1049b6848170660" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::transfer_from_blind_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="177" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1transfer__from__blind__operation_1afbc9ec0e7e762481c201e3c29d46adb5" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::transfer_from_blind_operation::amount</definition>
        <argsstring></argsstring>
        <name>amount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="178" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1transfer__from__blind__operation_1a89d5caad7fa4e7216efbc6fee67cf87f" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::transfer_from_blind_operation::to</definition>
        <argsstring></argsstring>
        <name>to</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="179" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1transfer__from__blind__operation_1ab503285725b447253bec0470d767f5ab" prot="public" static="no" mutable="no">
        <type>blind_factor_type</type>
        <definition>blind_factor_type graphene::chain::transfer_from_blind_operation::blinding_factor</definition>
        <argsstring></argsstring>
        <name>blinding_factor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="180" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1transfer__from__blind__operation_1a3ac782780164fd3a6286d4350ec13045" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="structgraphene_1_1chain_1_1blind__input" kindref="compound">blind_input</ref> &gt;</type>
        <definition>vector&lt;blind_input&gt; graphene::chain::transfer_from_blind_operation::inputs</definition>
        <argsstring></argsstring>
        <name>inputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="181" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1transfer__from__blind__operation_1aca8fe54a2899528116b84f02ea7202c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::transfer_from_blind_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="183" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1transfer__from__blind__operation_1a4f14d330d52d90700cc21a6ad758f1cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::transfer_from_blind_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>by requiring all inputs to be sorted we also prevent duplicate commitments on the input </para>        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="184" column="1" bodyfile="libraries/chain/protocol/confidential.cpp" bodystart="72" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1transfer__from__blind__operation_1a47e86cee9542ad1f7b66d61c362bbc33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::transfer_from_blind_operation::get_required_authorities</definition>
        <argsstring>(vector&lt; authority &gt; &amp;a) const</argsstring>
        <name>get_required_authorities</name>
        <param>
          <type>vector&lt; <ref refid="structgraphene_1_1chain_1_1authority" kindref="compound">authority</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="186" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="186" bodyend="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Converts blinded/stealth balance to a public account balance. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2807">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="2806">
        <label>graphene::chain::transfer_from_blind_operation</label>
        <link refid="structgraphene_1_1chain_1_1transfer__from__blind__operation"/>
        <childnode refid="2807" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2813">
        <label>blind_factor_type</label>
      </node>
      <node id="2809">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="2811">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="2812" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="2810">
        <label>vector&lt; graphene::chain::blind_input &gt;</label>
      </node>
      <node id="2808">
        <label>graphene::chain::transfer_from_blind_operation</label>
        <link refid="structgraphene_1_1chain_1_1transfer__from__blind__operation"/>
        <childnode refid="2809" relation="public-inheritance">
        </childnode>
        <childnode refid="2810" relation="usage">
          <edgelabel>inputs</edgelabel>
        </childnode>
        <childnode refid="2811" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>amount</edgelabel>
        </childnode>
        <childnode refid="2813" relation="usage">
          <edgelabel>blinding_factor</edgelabel>
        </childnode>
      </node>
      <node id="2812">
        <label>safe&lt; int64_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/confidential.hpp" line="172" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/confidential.hpp" bodystart="171" bodyend="191"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1transfer__from__blind__operation_1afbc9ec0e7e762481c201e3c29d46adb5" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>amount</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__from__blind__operation_1ab503285725b447253bec0470d767f5ab" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>blinding_factor</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__from__blind__operation_1a9578a35937dca8fab1049b6848170660" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__from__blind__operation_1aca8fe54a2899528116b84f02ea7202c1" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__from__blind__operation_1a47e86cee9542ad1f7b66d61c362bbc33" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__from__blind__operation_1a3ac782780164fd3a6286d4350ec13045" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>inputs</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__from__blind__operation_1a89d5caad7fa4e7216efbc6fee67cf87f" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>to</name></member>
      <member refid="structgraphene_1_1chain_1_1transfer__from__blind__operation_1a4f14d330d52d90700cc21a6ad758f1cb" prot="public" virt="non-virtual"><scope>graphene::chain::transfer_from_blind_operation</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
