<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1asset__update__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::asset_update_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1asset__update__operation_1_1fee__parameters__type" prot="public">graphene::chain::asset_update_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__update__operation_1a44a25d4abb28d9e12fce4c826dedb965" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::asset_update_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="280" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__update__operation_1a1488b34ac5a98751a74655acf05941be" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::asset_update_operation::issuer</definition>
        <argsstring></argsstring>
        <name>issuer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="281" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__update__operation_1ae080b1ddeb9824dacbe481a312dfdbff" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a8719a403aa47e9d369890c01d60d0bb2" kindref="member">asset_id_type</ref></type>
        <definition>asset_id_type graphene::chain::asset_update_operation::asset_to_update</definition>
        <argsstring></argsstring>
        <name>asset_to_update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="282" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__update__operation_1a77445106a6d7d681ee4ac42bc708f75b" prot="public" static="no" mutable="no">
        <type>optional&lt; <ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref> &gt;</type>
        <definition>optional&lt;account_id_type&gt; graphene::chain::asset_update_operation::new_issuer</definition>
        <argsstring></argsstring>
        <name>new_issuer</name>
        <briefdescription>
<para>If the asset is to be given a new issuer, specify his ID here. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="285" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__update__operation_1a6168afa1fce8ec622b708ee1154d78ac" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset__options" kindref="compound">asset_options</ref></type>
        <definition>asset_options graphene::chain::asset_update_operation::new_options</definition>
        <argsstring></argsstring>
        <name>new_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="286" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__update__operation_1a8a1672cf315facdbe053f28474b24fe7" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gae0096750377f6e9d61dba5765284de99" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::chain::asset_update_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="287" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__update__operation_1a398d5962e7c60d9bcf1ee05abcfb4a35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::asset_update_operation::asset_update_operation</definition>
        <argsstring>()</argsstring>
        <name>asset_update_operation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="278" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="278" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__update__operation_1a65a8f8afa6594275f59c31d3d4a01efc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::asset_update_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="289" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="289" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__update__operation_1af149ba7514c20012b1cdc85acc414da7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::asset_update_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="290" column="1" bodyfile="libraries/chain/protocol/asset_ops.cpp" bodystart="115" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__update__operation_1a89f581de0fc66207696986f3f4e792e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::asset_update_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1asset__update__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="291" column="1" bodyfile="libraries/chain/protocol/asset_ops.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Update options common to all assets</para><para>There are a number of options which all assets in the network use. These options are enumerated in the <ref refid="structgraphene_1_1chain_1_1asset__options" kindref="compound">asset_options</ref> struct. This operation is used to update these options for an existing asset. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>This operation cannot be used to update BitAsset-specific options. For these options, use <ref refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation" kindref="compound">asset_update_bitasset_operation</ref> instead.</para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1chain_1_1asset__update__operation_1a1488b34ac5a98751a74655acf05941be" kindref="member">issuer</ref> SHALL be an existing account and MUST match <ref refid="classgraphene_1_1chain_1_1asset__object_1ad5274b71ad420b57da53c3ef80b95577" kindref="member">asset_object::issuer</ref> on <ref refid="structgraphene_1_1chain_1_1asset__update__operation_1ae080b1ddeb9824dacbe481a312dfdbff" kindref="member">asset_to_update</ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1chain_1_1asset__update__operation_1a44a25d4abb28d9e12fce4c826dedb965" kindref="member">fee</ref> SHALL be nonnegative, and <ref refid="structgraphene_1_1chain_1_1asset__update__operation_1a1488b34ac5a98751a74655acf05941be" kindref="member">issuer</ref> MUST have a sufficient balance to pay it </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1chain_1_1asset__update__operation_1a6168afa1fce8ec622b708ee1154d78ac" kindref="member">new_options</ref> SHALL be internally consistent, as verified by <ref refid="structgraphene_1_1chain_1_1asset__update__operation_1af149ba7514c20012b1cdc85acc414da7" kindref="member">validate()</ref> </para></simplesect>
<simplesect kind="post"><para><ref refid="structgraphene_1_1chain_1_1asset__update__operation_1ae080b1ddeb9824dacbe481a312dfdbff" kindref="member">asset_to_update</ref> will have options matching those of new_options </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="999">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="998">
        <label>graphene::chain::asset_update_operation</label>
        <link refid="structgraphene_1_1chain_1_1asset__update__operation"/>
        <childnode refid="999" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1005">
        <label>flat_set&lt; asset_id_type &gt;</label>
      </node>
      <node id="1008">
        <label>graphene::chain::price</label>
        <link refid="structgraphene_1_1chain_1_1price"/>
        <childnode refid="1009" relation="usage">
          <edgelabel>base</edgelabel>
          <edgelabel>quote</edgelabel>
        </childnode>
      </node>
      <node id="1007">
        <label>string</label>
      </node>
      <node id="1002">
        <label>flat_set&lt; future_extensions &gt;</label>
      </node>
      <node id="1010">
        <label>flat_set&lt; account_id_type &gt;</label>
      </node>
      <node id="1001">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="1003">
        <label>optional&lt; account_id_type &gt;</label>
      </node>
      <node id="1009">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="1006" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="1000">
        <label>graphene::chain::asset_update_operation</label>
        <link refid="structgraphene_1_1chain_1_1asset__update__operation"/>
        <childnode refid="1001" relation="public-inheritance">
        </childnode>
        <childnode refid="1002" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="1003" relation="usage">
          <edgelabel>new_issuer</edgelabel>
        </childnode>
        <childnode refid="1004" relation="usage">
          <edgelabel>new_options</edgelabel>
        </childnode>
        <childnode refid="1009" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
      </node>
      <node id="1006">
        <label>safe&lt; int64_t &gt;</label>
      </node>
      <node id="1004">
        <label>graphene::chain::asset_options</label>
        <link refid="structgraphene_1_1chain_1_1asset__options"/>
        <childnode refid="1002" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="1005" relation="usage">
          <edgelabel>whitelist_markets</edgelabel>
          <edgelabel>blacklist_markets</edgelabel>
        </childnode>
        <childnode refid="1006" relation="usage">
          <edgelabel>max_market_fee</edgelabel>
          <edgelabel>max_supply</edgelabel>
        </childnode>
        <childnode refid="1007" relation="usage">
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="1008" relation="usage">
          <edgelabel>core_exchange_rate</edgelabel>
        </childnode>
        <childnode refid="1010" relation="usage">
          <edgelabel>whitelist_authorities</edgelabel>
          <edgelabel>blacklist_authorities</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="272" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="271" bodyend="292"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1asset__update__operation_1ae080b1ddeb9824dacbe481a312dfdbff" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>asset_to_update</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__operation_1a398d5962e7c60d9bcf1ee05abcfb4a35" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>asset_update_operation</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__operation_1a89f581de0fc66207696986f3f4e792e6" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual" ambiguityscope="graphene::chain::base_operation::"><scope>graphene::chain::asset_update_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__operation_1a8a1672cf315facdbe053f28474b24fe7" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__operation_1a44a25d4abb28d9e12fce4c826dedb965" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__operation_1a65a8f8afa6594275f59c31d3d4a01efc" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1ac7e2861a01bbaef8fbe5c5dcf5e73b38" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__operation_1a1488b34ac5a98751a74655acf05941be" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>issuer</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__operation_1a77445106a6d7d681ee4ac42bc708f75b" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>new_issuer</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__operation_1a6168afa1fce8ec622b708ee1154d78ac" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>new_options</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__operation_1af149ba7514c20012b1cdc85acc414da7" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_operation</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
